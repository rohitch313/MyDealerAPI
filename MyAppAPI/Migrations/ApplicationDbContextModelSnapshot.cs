// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyAppAPI.Data;

#nullable disable

namespace MyAppAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyAppAPI.Model.BankDetail", b =>
                {
                    b.Property<int>("RepaymentDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RepaymentDetailId"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IFSCCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RepaymentDetailId");

                    b.ToTable("BankDetails");
                });

            modelBuilder.Entity("MyAppAPI.Model.Car", b =>
                {
                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("CarName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Variant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CarId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("MyAppAPI.Model.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Amount_Due")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Facility_Availed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Invoice_Charges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<decimal?>("ProcessingCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.HasIndex("CarId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("MyAppAPI.Model.ProcDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("FilterId")
                        .HasColumnType("int");

                    b.Property<int>("PayId")
                        .HasColumnType("int");

                    b.Property<string>("Purchased_Amount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilterId");

                    b.HasIndex("PayId");

                    b.ToTable("procDetails");
                });

            modelBuilder.Entity("MyAppAPI.Model.ProcurementFilter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ProcurementFilters");
                });

            modelBuilder.Entity("MyAppAPI.Model.Sample", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Samples");
                });

            modelBuilder.Entity("MyAppAPI.Model.StockAudit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AuditDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("StockAudits");
                });

            modelBuilder.Entity("MyAppAPI.Model.Vehiclerecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Blacklist")
                        .HasColumnType("bit");

                    b.Property<int>("CId")
                        .HasColumnType("int");

                    b.Property<bool>("Challan")
                        .HasColumnType("bit");

                    b.Property<bool>("Fitness")
                        .HasColumnType("bit");

                    b.Property<bool>("Hypothecation")
                        .HasColumnType("bit");

                    b.Property<bool>("OwnerName")
                        .HasColumnType("bit");

                    b.Property<bool>("RcStatus")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CId");

                    b.ToTable("VehicleRecords");
                });

            modelBuilder.Entity("MyAppAPI.Model.Payment", b =>
                {
                    b.HasOne("MyAppAPI.Model.BankDetail", "BankDetail")
                        .WithMany("Payments")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyAppAPI.Model.Car", "Car")
                        .WithMany("Payments")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankDetail");

                    b.Navigation("Car");
                });

            modelBuilder.Entity("MyAppAPI.Model.ProcDetails", b =>
                {
                    b.HasOne("MyAppAPI.Model.ProcurementFilter", "ProcurementFilter")
                        .WithMany()
                        .HasForeignKey("FilterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyAppAPI.Model.Payment", "Payment")
                        .WithMany("procDetails")
                        .HasForeignKey("PayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payment");

                    b.Navigation("ProcurementFilter");
                });

            modelBuilder.Entity("MyAppAPI.Model.StockAudit", b =>
                {
                    b.HasOne("MyAppAPI.Model.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("MyAppAPI.Model.Vehiclerecord", b =>
                {
                    b.HasOne("MyAppAPI.Model.Car", "Car")
                        .WithMany("vehiclerecords")
                        .HasForeignKey("CId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("MyAppAPI.Model.BankDetail", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("MyAppAPI.Model.Car", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("vehiclerecords");
                });

            modelBuilder.Entity("MyAppAPI.Model.Payment", b =>
                {
                    b.Navigation("procDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
